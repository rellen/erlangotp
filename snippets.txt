runamuck:~ robert$ erl
Erlang R16B02 (erts-5.10.3) [source] [64-bit] [smp:8:8] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V5.10.3  (abort with ^G)
1> X = 5.
5
2> Y = 2.
2
3> Z = X * Y.
10
4> X = 4.
** exception error: no match of right hand side value 4
5> 2 = Y.
2
6> 


Erlang R16B02 (erts-5.10.3) [source] [64-bit] [smp:8:8] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V5.10.3  (abort with ^G)
1> Name = bob.
bob
2> AnotherName = 'Alice'.
'Alice'
3> is_list(AnotherName).
false
4> is_atom(AnotherName).
true
5> StringName = "Alice".
"Alice"
6> is_atom(StringName).
false
7> 




Erlang R16B02 (erts-5.10.3) [source] [64-bit] [smp:8:8] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V5.10.3  (abort with ^G)
1> true or false.
true
2> true and false.
false
3> true xor false.
true
4> false orelse true.
true
5> true andalso false.
false
6> 




Erlang R16B02 (erts-5.10.3) [source] [64-bit] [smp:8:8] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V5.10.3  (abort with ^G)
1> Tail = [2,3,4].
[2,3,4]
2> Head = 1.
1
3> MyList = [Head|Tail].
[1,2,3,4]
4> MyNewList = MyList ++ [5|[]].
[1,2,3,4,5]
5>


Erlang R16B02 (erts-5.10.3) [source] [64-bit] [smp:8:8] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V5.10.3  (abort with ^G)
1> MyList = [ok, "Error", 123].
[ok,"Error",123]
2> LoL = [[1,2,3],[4,5,6],[7,8,9]].
[[1,2,3],[4,5,6],[7,8,9]]
3> 



Erlang R16B02 (erts-5.10.3) [source] [64-bit] [smp:8:8] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V5.10.3  (abort with ^G)
1> MyList = [X || X <- [1,2,a,3,4,b,5,6], X > 3].
[a,4,b,5,6]
2> MyIntegerList = [X || X <- [1,2,a,3,4,b,5,6], integer(X), X > 3].
[4,5,6]
3> MyIntegerListPlusOne = [X+1 || X <- [1,2,a,3,4,b,5,6], integer(X), X > 3].
[5,6,7]
4> 



Eshell V5.10.3  (abort with ^G)
1> Name = "Alice", Age = 25.
25
2> Alice = {Name, Age}.
{"Alice",25}
3> Bob = {"Bob", 22}.
{"Bob",22}
4> {BobName,BobAge} = Bob.
{"Bob",22}
5> BobName.
"Bob"
6> {BobName,_} = Bob.
{"Bob",22}
7> {_,AliceAge} = Alice.
{"Alice",25}
8> AliceAge.
25
9> {_,_,_} = Alice.
** exception error: no match of right hand side value {"Alice",25}
10> 



Eshell V5.10.3  (abort with ^G)
1> c(my_module).
{ok,my_module}
2> my_module:add(1,2).
3
3> my_module:square_add(3,5).
64
4> my_module:print_square(9).
The square of 9 is: 81
ok
5> 





Eshell V5.10.3  (abort with ^G)
1> c(my_macros).
{ok,my_macros}
2> my_macros:circ(2). 
6.28
3> 




receive
    Pattern1 -> Expression1;
    Pattern2 -> Expression2;
    ...
    PatternN -> ExpressionN
end. 	



loop(State) ->
    receive
        Pattern -> 
            NewState = some_code (State),
            loop (NewState).
    end. 




Eshell V5.10.3  (abort with ^G)
1> Fa = fun (X) -> X + 1 end.
#Fun<erl_eval.6.80484245>
2> Fa(2).
3
3> Fb = fun(X) -> fun(Y) -> X + Y end end.
#Fun<erl_eval.6.80484245>
4> Fc = Fb(5).
#Fun<erl_eval.6.80484245>
5> Fc(2).
7
6> Fd = Fb(10).
#Fun<erl_eval.6.80484245>
7> Fd(2). 
12
8> Fc(2).
7
9> 


Eshell V5.10.3  (abort with ^G)
1> lists:filter(fun (X) -> X > 3 end,[1,2,3,4,5,6]).
[4,5,6]
2> lists:map(fun (X) -> X * X end,[1,2,3,4,5,6]).   
[1,4,9,16,25,36]
3> lists:foldr(fun (X,Z) -> X * Z end, 1, [1,2,3,4,5,6]).
720
4> SumList = fun (List) -> lists:foldr (fun (X, Z) -> X + Z end, 0, List) end.
#Fun<erl_eval.6.80484245>
5> SumList([1,2,3,4,5,6]).
21
6> 




Eshell V5.10.3  (abort with ^G)
1> counters_sup:start_test().
true
2> counters:create(c1).
init on a counter called: c1
{ok,<0.38.0>}
3> counters:count(c1).          
{ok,0}
4> counters:increment(c1,5).    
ok
5> counters:count(c1).      
{ok,5}
6> counters:increment(c1,crash).

=ERROR REPORT==== 29-Oct-2013::01:03:03 ===
** Generic server <0.38.0> terminating 
** Last message in was {'$gen_cast',{increment,crash}}
** When Server state == {state,5}
** Reason for termination == 
** {badarith,[{counter,handle_cast,2,[{file,"src/counter.erl"},{line,52}]},
              {gen_server,handle_msg,5,[{file,"gen_server.erl"},{line,604}]},
              {proc_lib,init_p_do_apply,3,
                        [{file,"proc_lib.erl"},{line,239}]}]}
init on a counter called: c1
ok
7> counters:count(c1).          
{ok,0}
8> 


Eshell V5.10.3  (abort with ^G)
1> counters_sup:start_test().
true
2> counters:create(c1).
init on a counter called: c1
{ok,<0.36.0>}
3> counters:increment(c1,5).
ok
4> counters:count(c1).
{ok,5}
5> counters:increment(c1,crash).
init on a counter called: c1
ok
6> 
=ERROR REPORT==== 29-Oct-2013::02:17:12 ===
** Generic server <0.36.0> terminating 
** Last message in was {'$gen_cast',{increment,crash}}
** When Server state == {state,c1,5}
** Reason for termination == 
** {badarith,[{counter,handle_cast,2,[{file,"src/counter.erl"},{line,59}]},
              {gen_server,handle_msg,5,[{file,"gen_server.erl"},{line,604}]},
              {proc_lib,init_p_do_apply,3,
                        [{file,"proc_lib.erl"},{line,239}]}]}

6> counters:count(c1).          
{ok,5}
7> 



